schemas:
  UserRegisterRequest:
    type: object
    required:
      - name
      - email
      - password
    properties:
      name:
        type: string
        example: 'John Doe'
      email:
        type: string
        format: email
        maxLength: 64
        example: 'john.doe@example.com'
      password:
        type: string
        minLength: 8
        maxLength: 64
        example: 'securePassword123'
  UserLoginRequest:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        format: email
        maxLength: 64
        example: 'john.doe@example.com'
      password:
        type: string
        minLength: 8
        maxLength: 64
        example: 'securePassword123'
  UserResponse:
    type: object
    properties:
      user:
        type: object
        properties:
          name:
            type: string
            example: 'John Doe'
          email:
            type: string
            format: email
            example: 'john.doe@example.com'
      token:
        type: string
        example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
  LogoutRequest:
    type: object
    required:
      - email
    properties:
      email:
        type: string
        format: email
        maxLength: 64
        example: 'john.doe@example.com'
  ErrorResponse:
    type: object
    properties:
      status:
        type: integer
        example: 400
      message:
        type: string
        example: 'Bad Request'
  ValidationErrorResponse:
    type: object
    properties:
      status:
        type: integer
        example: 400
      message:
        type: array
        items:
          type: string
          example: '"email" must be a valid email'
  UnauthorizedErrorResponse:
    type: object
    properties:
      status:
        type: integer
        example: 401
      message:
        type: string
        example: 'Invalid credentials'
  ConflictErrorResponse:
    type: object
    properties:
      status:
        type: integer
        example: 409
      message:
        type: string
        example: 'Email in use'
  NotFoundErrorResponse:
    type: object
    properties:
      status:
        type: integer
        example: 404
      message:
        type: string
        example: 'User not found'
  InternalServerErrorResponse:
    type: object
    properties:
      status:
        type: integer
        example: 500
      message:
        type: string
        example: 'Internal server ERROR, Reason: ...'
